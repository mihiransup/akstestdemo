# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
#
resources:
- repo: self

stages:
- stage: Validate
  jobs:
  - job: Validate
    continueOnError: false
    steps:
    - publish: 1-terraform
      artifact: terraform_out
    - task: JamiePhillips.Terraform.TerraformTool.TerraformTool@0
      displayName: 'Use Terraform 0.12.6'
      inputs:
        version: '0.12.6'
    # - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
    #   displayName: 'Use Terraform v0.12.6'
    #   inputs:
    #     terraformVersion: 0.12.6

    # - script: |
    #     pwd
    #     ls -la 

    #     cd s/1-terraform
    #     terraform init -backend-config="resource_group_name=AksTerraform-test-demo" -backend-config="storage_account_name=storagetestdemoaks" -backend-config="container_name=tfstate"
    #   workingDirectory: '$(Pipeline.Workspace)'
    #   displayName: 'Terraform init'  
    - task: TerraformCLI@0
       inputs:
        command: 'init'
        backendType: 'azurerm'
        backendServiceArm: 'test'
        backendAzureRmResourceGroupName: 'AksTerraform-test-demo'
        backendAzureRmStorageAccountName: 'storagetestdemoaks'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'terraform.tfstate'
 



 